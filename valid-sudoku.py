#! /usr/bin/env python
# _*_ coding:utf-8 _*_


class Solution(object):
    def isValidSudoku(self, board):
        cols = [{}, {}, {}, {}, {}, {}, {}, {}, {}]
        for i in range(9):
            row = {}
            for j in range(9):
                e = board[i][j]
                if e != ".":
                    if e in row:
                        return False
                    row[e] = j

                    col = cols[j]
                    if e in col:
                        return False
                    col[e] = i

                c1, c2, c3 = None, None, None
                if i in [2, 5, 8] and j in [2, 5, 8]:
                    c1 = [v for v in board[i - 2][j - 2: j + 1] if v != '.']
                    c2 = [v for v in board[i - 1][j - 2: j + 1] if v != '.']
                    c3 = [v for v in board[i][j - 2: j + 1] if v != '.']
                if c1 is None:
                    continue
                if len(c1) + len(c2) + len(c3) != len(set(c1 + c2 + c3)):
                    return False

        return True


if __name__ == '__main__':
    so = Solution()
    b = [
  ["5","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
    #assert (so.isValidSudoku(b) == True)
    b = [
  ["8","3",".",".","7",".",".",".","."],
  ["6",".",".","1","9","5",".",".","."],
  [".","9","8",".",".",".",".","6","."],
  ["8",".",".",".","6",".",".",".","3"],
  ["4",".",".","8",".","3",".",".","1"],
  ["7",".",".",".","2",".",".",".","6"],
  [".","6",".",".",".",".","2","8","."],
  [".",".",".","4","1","9",".",".","5"],
  [".",".",".",".","8",".",".","7","9"]
]
    #assert (so.isValidSudoku(b) == False)
    b = [
            [".","8","7","6","5","4","3","2","1"],
            ["2",".",".",".",".",".",".",".","."],
            ["3",".",".",".",".",".",".",".","."],
            ["4",".",".",".",".",".",".",".","."],
            ["5",".",".",".",".",".",".",".","."],
            ["6",".",".",".",".",".",".",".","."],
            ["7",".",".",".",".",".",".",".","."],
            ["8",".",".",".",".",".",".",".","."],
            ["9",".",".",".",".",".",".",".","."]
]
    assert (so.isValidSudoku(b) == True)
